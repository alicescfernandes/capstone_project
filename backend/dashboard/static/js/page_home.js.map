{
  "version": 3,
  "sources": ["../../../src/js/page_home.js"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", () => {\n\n    // Scroll to top functionality\n    const scrollBtn = document.getElementById('scrollToTopBtn');\n\n    window.addEventListener('scroll', () => {\n        if (window.scrollY > 500) {\n            scrollBtn.classList.remove('hidden');\n        } else {\n            scrollBtn.classList.add('hidden');\n        }\n    });\n    document.querySelectorAll('[data-toggle]').forEach(button => {\n        const targetId = button.getAttribute('data-toggle');\n        const target = document.querySelector(`[data-section-id=\"${targetId}\"]`);\n\n        button.addEventListener('click', () => {\n            const isHidden = target.classList.toggle('hidden');\n            button.textContent = isHidden ? '+' : '-';\n        });\n    });\n\n\n    const searchInput = document.getElementById('sectionSearch');\n    const sectionContainers = document.querySelectorAll('.section-container');\n\n    function highlightText(text, searchTerm) {\n        if (!searchTerm) return text;\n        const regex = new RegExp(searchTerm, 'gi');\n        return text.replace(regex, match => `<span class=\"bg-yellow-200\">${match}</span>`);\n    }\n\n    function resetHighlights(element) {\n        const originalText = element.getAttribute('data-original-text') || element.textContent;\n        element.innerHTML = originalText;\n    }\n\n    // Highlight search results\n    searchInput.addEventListener('input', function(e) {\n        const searchTerm = e.target.value.toLowerCase();\n\n        sectionContainers.forEach(container => {\n            const sectionLink = container.querySelector('.section-item a');\n            const chartItems = container.querySelectorAll('.chart-item');\n            let hasMatch = false;\n\n            // Store original text if not already stored\n            if (!sectionLink.getAttribute('data-original-text')) {\n                sectionLink.setAttribute('data-original-text', sectionLink.textContent);\n            }\n            chartItems.forEach(chart => {\n                if (!chart.getAttribute('data-original-text')) {\n                    chart.setAttribute('data-original-text', chart.textContent);\n                }\n            });\n\n            // Check if section title matches\n            const sectionTitle = sectionLink.textContent.toLowerCase();\n            if (sectionTitle.includes(searchTerm)) {\n                hasMatch = true;\n                sectionLink.innerHTML = highlightText(sectionLink.getAttribute('data-original-text'), searchTerm);\n            } else {\n                resetHighlights(sectionLink);\n            }\n\n            // Check if any chart titles match\n            chartItems.forEach(chart => {\n                const chartTitle = chart.textContent.toLowerCase();\n                if (chartTitle.includes(searchTerm)) {\n                    hasMatch = true;\n                    chart.innerHTML = highlightText(chart.getAttribute('data-original-text'), searchTerm);\n                } else {\n                    resetHighlights(chart);\n                }\n            });\n\n            // Show/hide section based on matches\n            if (hasMatch) {\n                container.style.display = '';\n                // If there's a search term, expand sections with matches\n                if (searchTerm) {\n                    const subSections = container.querySelector('.sub-sections');\n                    if (subSections) {\n                        subSections.classList.remove('hidden');\n                    }\n                }\n            } else {\n                container.style.display = 'none';\n            }\n        });\n    });\n});\n\n\n"],
  "mappings": "MAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAGhD,IAAMA,EAAY,SAAS,eAAe,gBAAgB,EAE1D,OAAO,iBAAiB,SAAU,IAAM,CAChC,OAAO,QAAU,IACjBA,EAAU,UAAU,OAAO,QAAQ,EAEnCA,EAAU,UAAU,IAAI,QAAQ,CAExC,CAAC,EACD,SAAS,iBAAiB,eAAe,EAAE,QAAQC,GAAU,CACzD,IAAMC,EAAWD,EAAO,aAAa,aAAa,EAC5CE,EAAS,SAAS,cAAc,qBAAqBD,CAAQ,IAAI,EAEvED,EAAO,iBAAiB,QAAS,IAAM,CACnC,IAAMG,EAAWD,EAAO,UAAU,OAAO,QAAQ,EACjDF,EAAO,YAAcG,EAAW,IAAM,GAC1C,CAAC,CACL,CAAC,EAGD,IAAMC,EAAc,SAAS,eAAe,eAAe,EACrDC,EAAoB,SAAS,iBAAiB,oBAAoB,EAExE,SAASC,EAAcC,EAAMC,EAAY,CACrC,GAAI,CAACA,EAAY,OAAOD,EACxB,IAAME,EAAQ,IAAI,OAAOD,EAAY,IAAI,EACzC,OAAOD,EAAK,QAAQE,EAAOC,GAAS,+BAA+BA,CAAK,SAAS,CACrF,CAEA,SAASC,EAAgBC,EAAS,CAC9B,IAAMC,EAAeD,EAAQ,aAAa,oBAAoB,GAAKA,EAAQ,YAC3EA,EAAQ,UAAYC,CACxB,CAGAT,EAAY,iBAAiB,QAAS,SAASU,EAAG,CAC9C,IAAMN,EAAaM,EAAE,OAAO,MAAM,YAAY,EAE9CT,EAAkB,QAAQU,GAAa,CACnC,IAAMC,EAAcD,EAAU,cAAc,iBAAiB,EACvDE,EAAaF,EAAU,iBAAiB,aAAa,EACvDG,EAAW,GAiCf,GA9BKF,EAAY,aAAa,oBAAoB,GAC9CA,EAAY,aAAa,qBAAsBA,EAAY,WAAW,EAE1EC,EAAW,QAAQE,GAAS,CACnBA,EAAM,aAAa,oBAAoB,GACxCA,EAAM,aAAa,qBAAsBA,EAAM,WAAW,CAElE,CAAC,EAGoBH,EAAY,YAAY,YAAY,EACxC,SAASR,CAAU,GAChCU,EAAW,GACXF,EAAY,UAAYV,EAAcU,EAAY,aAAa,oBAAoB,EAAGR,CAAU,GAEhGG,EAAgBK,CAAW,EAI/BC,EAAW,QAAQE,GAAS,CACLA,EAAM,YAAY,YAAY,EAClC,SAASX,CAAU,GAC9BU,EAAW,GACXC,EAAM,UAAYb,EAAca,EAAM,aAAa,oBAAoB,EAAGX,CAAU,GAEpFG,EAAgBQ,CAAK,CAE7B,CAAC,EAGGD,GAGA,GAFAH,EAAU,MAAM,QAAU,GAEtBP,EAAY,CACZ,IAAMY,EAAcL,EAAU,cAAc,eAAe,EACvDK,GACAA,EAAY,UAAU,OAAO,QAAQ,CAE7C,OAEAL,EAAU,MAAM,QAAU,MAElC,CAAC,CACL,CAAC,CACL,CAAC",
  "names": ["scrollBtn", "button", "targetId", "target", "isHidden", "searchInput", "sectionContainers", "highlightText", "text", "searchTerm", "regex", "match", "resetHighlights", "element", "originalText", "e", "container", "sectionLink", "chartItems", "hasMatch", "chart", "subSections"]
}
